{
  "resourceType": "Library",
  "id": "DischargedonAntithromboticTherapyQICore4",
  "meta": {
    "versionId": "24",
    "lastUpdated": "2021-08-24T13:12:30.000-06:00",
    "source": "#M4MHZMhmMYNUtjQP",
    "profile": [ "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/computable-library-cqfm" ]
  },
  "language": "en",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://ecqi.healthit.gov/ecqms/Library/DischargedonAntithromboticTherapyQICore4",
  "version": "0.0.010",
  "name": "DischargedonAntithromboticTherapyQICore4",
  "title": "Discharged on Antithrombotic Therapy QICore",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "date": "2021-08-24T19:12:29+00:00",
  "publisher": "The Joint Commission",
  "description": "Discharged on Antithrombotic Therapy QICore",
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  } ]
}